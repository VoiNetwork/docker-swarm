#!/bin/bash

source "${HOME}/voi/bin/.helpers/util.sh"

util_validate_supported_node_type "participation"

is_root=0

execute_sudo() {
  if [[ ${is_root} -eq 1 ]]; then
    bash -c "$1"
  else
    sudo bash -c "$1"
  fi
}

set_telemetry_name() {
  if [[ -z ${VOINETWORK_TELEMETRY_NAME} ]]; then
    echo "Voi uses telemetry to make the network better and reward users with Voi if participating."
    echo ""
    echo "Type your telemetry name below. We'll add 'VOI:' at the start to show you're using this package."
    echo ""
    echo ""
    echo "To skip telemetry sharing, type 'continue' below."
    # shellcheck disable=SC2162
    read -p "Telemetry name: " VOINETWORK_TELEMETRY_NAME
    if [[ ${VOINETWORK_TELEMETRY_NAME} == "continue" ]]; then
      unset VOINETWORK_TELEMETRY_NAME
      return
    else
      VOINETWORK_TELEMETRY_NAME="VOI:$VOINETWORK_TELEMETRY_NAME"
    fi
  fi
}

get_logging_config() {
  execute_sudo "cat /var/lib/voi/algod/data/logging.config"
}

write_logging_config() {
  local config_content="$1"
  local temp_file
  temp_file=$(mktemp)

  echo "${config_content}" > "$temp_file"
  execute_sudo "mv $temp_file /var/lib/voi/algod/data/logging.config"

  if [[ ${is_root} -eq 0 ]]; then
    execute_sudo "chgrp docker /var/lib/voi/algod/data/logging.config"
  fi
}

update_guid_in_config() {
  local guid="$1"
  local logging_config
  logging_config=$(get_logging_config)

  echo "${logging_config}" | jq --arg guid "${guid}" '.GUID = $guid'
}

if [ -z "${CONTAINER_ID}" ]; then
    echo "AVM container is not running. Please start it first."
    exit 1
fi

if [[ $(id -u) -eq 0 ]]; then
  is_root=1
else
  echo "Checking for sudo access, you may be prompted for your password."
  if ! sudo -v &> /dev/null; then
    util_abort "User does not have sudo access. Please run this script as a user with sudo access."
  fi
fi

unset VOINETWORK_TELEMETRY_NAME

if [[ $1 && $2 ]]; then
  telemetry_name="${1//\"}"
  guid="${2//\"}"

  new_config=$(update_guid_in_config "${guid}")
  write_logging_config "${new_config}"

  VOINETWORK_TELEMETRY_NAME="${telemetry_name}"

  echo "Telemetry name set to: $telemetry_name, GUID set to: $guid"
else
  set_telemetry_name
fi

if [[ -z ${VOINETWORK_TELEMETRY_NAME} ]]; then
  echo "Telemetry sharing skipped."

  if grep -q "^export VOINETWORK_TELEMETRY_NAME=" ~/voi/.profile; then
    sed -i '/^export VOINETWORK_TELEMETRY_NAME=/d' ~/voi/.profile
  fi

  util_start_stack
else
  util_update_profile_setting "VOINETWORK_TELEMETRY_NAME" "${VOINETWORK_TELEMETRY_NAME}"
  util_start_stack
fi

echo "Changes has been applied to the network. Please wait a minute for the changes to take effect. Confirm changes by running '${HOME}/voi/bin/get-telemetry-status' after a minute."
